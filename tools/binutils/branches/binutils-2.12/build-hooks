basedir=${PWD%/*}
config_target=${PWD##*-}
qnx_target_version=6.3.0
targets="arm-unknown-nto-qnx${qnx_target_version} mips-unknown-nto-qnx${qnx_target_version} powerpc-unknown-nto-qnx${qnx_target_version} sh-unknown-nto-qnx${qnx_target_version} i386-pc-nto-qnx${qnx_target_version}"
recurse_targets="ntoarm ntomips ntoppc ntosh ntox86"
target=i386-pc-nto-qnx${qnx_target_version}
TOOL_PATH=${TOOL_PATH:-$QNX_HOST}

function hook_preconfigure {
	if [ ${config_target} == ntomulti ]; then
	    multitargets="${multitargets} `${basedir}/config.guess`"
	    multitargets=--enable-targets=$(echo ${targets} | tr ' ' ',')
	    target=ntomulti
	fi

	case ${SYSNAME} in
	nto) 
		;;
	solaris)
		;;
	linux)
		;;
	win32)
		;;
	*)
		echo "Don't have config for ${SYSNAME}"
		exit 1
		;;
	esac

	execdir=${TOOL_PATH}/usr

	configure_opts="${configure_opts} --disable-shared"
	configure_opts="${configure_opts} --disable-nls"
	configure_opts="${configure_opts} --prefix=${execdir}"
	configure_opts="${configure_opts} --exec-prefix=${execdir}"
	configure_opts="${configure_opts} --with-local-prefix=${execdir}"
	configure_opts="${configure_opts} ${multitargets}"
	if [ ${SYSNAME} == nto ]; then
		# This "if" is a hack - shouldn't need to set '--host', but
		# there's a bug in config.guess/config.sub
		configure_opts="${configure_opts} --host=${target}"
	fi
	configure_opts="${configure_opts} --target=${target}"

	export CC="${make_CC}"
	export CFLAGS="-O2 -Wall"
}

function hook_postconfigure {
	if [ ${config_target} == ntomulti ]; then

	    if [ ${SYSNAME} != nto ]; then
		mkdir gprof
		cd gprof

		if ! ${basedir}/gprof/configure \
			--target=${config_target} \
			--prefix=/usr \
			--srcdir=${basedir}/gprof \
			--exec-prefix=/usr \
			--program-prefix=${config_target}- \
			--disable-shared \
			--disable-nls \
			${prev_cache}; then
			echo gprof Configure failed!
			exit 2
		fi
		cd ..
	    fi

	    cd gas
	    rm -Rf *
	    prev_cache=""

		for targ in ${targets}; do
			mkdir ${targ}
			cd ${targ}
			if ! ${basedir}/gas/configure \
				--target=${targ} \
				--prefix=/usr \
				--srcdir=${basedir}/gas \
				--exec-prefix=/usr \
				--program-prefix=${targ}- \
				--disable-shared \
				--disable-nls \
				${prev_cache}; then
				echo Configure failed!
				exit 2
			fi
			if [ ! "${prev_cache}" ]; then
				prev_cache="--cache=../${targ}/config.cache"
			fi
			cd ..
		done

		# The gas makefile has an abortion where it assumes that it's
		# side by side with bfd, intl, libiberty and opcodes. 
		ln -sf ../bfd bfd
		ln -s ../opcodes opcodes
		ln -s ../intl intl
		ln -s ../libiberty libiberty

		# Set up symlinks from the target names to ntoCPU names for
		# recurse.mk
		ln -s arm-unknown-nto-qnx${qnx_target_version} ntoarm
		ln -s mips-unknown-nto-qnx${qnx_target_version} ntomips
		ln -s powerpc-unknown-nto-qnx${qnx_target_version} ntoppc
		ln -s sh-unknown-nto-qnx${qnx_target_version} ntosh
		ln -s i386-pc-nto-qnx${qnx_target_version} ntox86
		

		# Shouldn't need the "ifdef", but something strange happens on
		# solaris and make won't find 'recurse.mk' in the search path.
		cat >Makefile <<-HERE
		LIST=GASTARG
		GASTARGLIST=${recurse_targets}
		ifdef MKFILES_ROOT
		include \$(MKFILES_ROOT)/recurse.mk
		else
		include recurse.mk
		endif
		HERE
		cd ..

            cd ld 
            rm -Rf *
            prev_cache=""

                for targ in ${targets}; do
                        mkdir ${targ}
                        cd ${targ}
                        if ! ${basedir}/ld/configure \
                                --target=${targ} \
                                --prefix=/usr \
                                --srcdir=${basedir}/ld \
                                --exec-prefix=/usr \
                                --program-prefix=${targ}- \
                                --disable-shared \
                                --disable-nls \
                                ${prev_cache}; then
                                echo Configure failed!
                                exit 2
                        fi
                        if [ ! "${prev_cache}" ]; then
                                prev_cache="--cache=../${targ}/config.cache"
                        fi
                        cd ..
                done

                # The ld makefile has an abortion where it assumes that it's
                # side by side with bfd, intl, libiberty and opcodes.
                ln -sf ../bfd bfd
                ln -s ../opcodes opcodes
                ln -s ../intl intl
                ln -s ../libiberty libiberty

		# Set up symlinks from the target names to ntoCPU names for
		# recurse.mk
		ln -s arm-unknown-nto-qnx${qnx_target_version} ntoarm
		ln -s mips-unknown-nto-qnx${qnx_target_version} ntomips
		ln -s powerpc-unknown-nto-qnx${qnx_target_version} ntoppc
		ln -s sh-unknown-nto-qnx${qnx_target_version} ntosh
		ln -s i386-pc-nto-qnx${qnx_target_version} ntox86

                # Shouldn't need the "ifdef", but something strange happens on
                # solaris and make won't find 'recurse.mk' in the search path.
		cat >Makefile <<-HERE
		LIST=LDTARG
		LDTARGLIST=${recurse_targets}
		ifdef MKFILES_ROOT
		include \$(MKFILES_ROOT)/recurse.mk
		else
		include recurse.mk
		endif
		HERE
                cd ..
        fi
}

function hook_premake {
	# DO NOT REMOVE THE FOLLOWING LINE!!!!
	# Without inttypes.h, alignments get screwed up 
	# as a result of a compiler bug. 
	export CFLAGS="-O2 -Wp,-idirafter -Wp,$QNX_TARGET/usr/include -Wp,-include -Wp,$QNX_TARGET/usr/include/inttypes.h"

	make_CC="env QCC_CONF_PATH=$QCC_CONF_PATH QNX_TARGET=$QNX_TARGET ${make_CC}"

	strip_r_switch;
}


function hook_pinfo {
	cd binutils
	gen_pinfo -e -nsize ntomulti-size usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU size" "FINFO=0 0 0775"
	gen_pinfo -e -nobjdump ntomulti-objdump usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU objdump" "FINFO=0 0 0775"
	gen_pinfo -e -nar ntomulti-ar usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU ar" "FINFO=0 0 1775"
	gen_pinfo -e -nranlib ntomulti-ranlib usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU ranlib" "FINFO=0 0 1775"
	gen_pinfo -e -nstrings ntomulti-strings usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU strings" "FINFO=0 0 0775"
	gen_pinfo -e -nobjcopy ntomulti-objcopy usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU objcopy" "FINFO=0 0 0775"
	gen_pinfo -e -nstrip-new ntomulti-strip usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU strip" "FINFO=0 0 0775"
	gen_pinfo -e -naddr2line ntomulti-addr2line usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU addr2line" "FINFO=0 0 0775"
	gen_pinfo -e -nnm-new ntomulti-nm usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU nm" "FINFO=0 0 0775"
	gen_pinfo -e -ncxxfilt ntomulti-c++filt usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU c++filt" "FINFO=0 0 0775"
	gen_pinfo -e -nreadelf ntomulti-readelf usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU readelf" "FINFO=0 0 0775"
	cd ../gprof
	gen_pinfo -e -ngprof ntomulti-gprof usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU profiler" "FINFO=0 0 0775"

	cd ../gas
	for targ in ${targets}; do
		gen_pinfo -e -n${targ}/gasp-new ${targ}-gasp usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU assembler" "FINFO=0 0 1775"
	done

	for targ in ${targets}; do
		gen_pinfo -e -n${targ}/as-new ${targ}-as usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU assembler" "FINFO=0 0 1775"
	done

	cd ../ld
	for targ in ${targets}; do
		gen_pinfo -e -n${targ}/ld-new ${targ}-ld usr/bin LICE=GPL USE="%1>%C --help" DESCRIPTION="GNU linker" "FINFO=0 0 1775"
	done
}

