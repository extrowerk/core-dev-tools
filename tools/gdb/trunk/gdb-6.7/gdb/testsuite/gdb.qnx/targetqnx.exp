load_lib libqnx.exp


# since all of the target qnx tests are remote we need to define a default compiler for our tests
# QCC should be the default unless it is broken
set CC_FOR_TARGET ntoppc-gcc
set CXX_FOR_TARGET ntoppc-gcc
set target_address 10.42.104.186
set debug_port 8000

set timeout 300

# set additional_flags "-w -Vntox86_gcc

set testfile targetqnx
set srcfile ${srcdir}/${subdir}/${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}

# clean up any old gdbs running
gdb_exit

# compile the program into a binary
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug additional_flags="-w"}] != "" } {
    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
    }

if [get_compiler_info ${binfile}] {
    return -1
}


# start a fresh gdb then connect and upload our sanity test
# finish it up by running our sanity and checking its output with the gdb_test func
gdb_start

#if [ gdb_target_qnx $target_address $debug_port ] then {
#    perror "couldn't connect to target"
#    gdb_exit
#    exit 1
#}

#if { [ gdb_upload_binary ${binfile} ${testfile} ] != 0 } then {
#   perror "error uploading test file"
#   gdb_exit
#   exit 1
# }
gdb_load ${binfile}

runto_main
#send_gdb "run /tmp/${testfile}\r"


send_gdb "continue\r"
gdb_expect {
  -re "hello world*" { pass "sanity" }
  timeout { fail "sanity" }
}


# TODO:  add function to clean target of binary
       
gdb_exit
