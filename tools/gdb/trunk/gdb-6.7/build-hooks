target=${PWD##*-}
target_cpu=${target#nto*}
srcdir=${PWD}/..
qnx_target_version=6.3.0
host_target=${PWD##*/}
host_cpu=${host_target#*-}
host_cpu=${host_cpu%%-*}

if [ $target_cpu = x86 ]; then
	target_cpu=i386
fi
case ${host_target} in
  *-nto*)
    tmpstring=${target_cpu}-nto-qnx${qnx_target_version}
    target=`${srcdir}/config.sub ${tmpstring}`
  ;;
  *)
    target=""
    echo Configuring for native target.
  ;;
esac

function hook_preconfigure {
	case ${SYSNAME} in
	nto)
		host_cpu=$(uname -p)
		if [ $host_cpu = x86 ]; then
		  host_cpu=i386
		fi

		case ${host_target} in
		nto*)   basedir=/usr
			if [ ${host_cpu} = ${target_cpu} ]; then
				configure_opts="${configure_opts} --host=${target}"
			fi
			;;
		*)      basedir=/opt/QNXsdk/host/qnx6/x86/usr ;;
		esac
		;;
	solaris)
		host_cpu=$(uname -p)
		case ${host_cpu} in
        		i[34567]86) host_cpu=x86 ;;
		esac
		basedir=/opt/QNXsdk/host/solaris/${host_cpu}/usr
		;;
	linux)
		configure_opts="${configure_opts} --build=i686-pc-linux-gnu"
			;;
	win32)
		basedir=/cygdrive/c/QNXsdk/host/win32/x86/usr
		;;
	*)
		echo "Don't have config for ${SYSNAME}"
		exit 1
		;;
	esac

        if [ ${host_target%%-*} != ${SYSNAME} ]; then
	  case $host_target in
		nto*)
	          configure_opts="${configure_opts} --host=i386-pc-nto-qnx6.3.0"
  		  ;;
		linux*) 
		  # basedir=${INSTALL_ROOT_linux}/${SYSNAME}/${host_cpu}/usr
		  # /opt/QNXsdk/host/linux/${host_cpu}/usr
		  # execdir=/opt/qnx630/host/linux/${host_cpu}/usr
		  ;;
		win32*)
		  configure_opts="${configure_opts} --host=i386-mingw32msvc"
		  execdir=/c/qnx630/host/win32/x86/usr
                  if [ $SYSNAME != "win32" ]; then
                     if [ x$INSTALL_ROOT = x ]; then
                        INSTALL_ROOT=/c/qnx630/host
                     fi
                  fi
		;;
 	  esac
	fi  
		  
	case ${host_cpu} in
           i[34567]86) 
		host_cpu=x86 
		;;
	esac

	case ${target_cpu} in
	   i[34567]86)
	   	target_cpu=x86
		;;
	esac

	basedir=${INSTALL_ROOT}/${host_target%%-*}/${host_cpu}/usr
	if [ x$INSTALL_ROOT = x ]; then
	  echo "Using QNX_HOST as install dir: ${QNX_HOST}"
	  basedir=${QNX_HOST}/usr
	fi
	echo ${basedir}

	configure_opts="${configure_opts} --target=${target}"
	configure_opts="${configure_opts} --prefix=${basedir}"
	configure_opts="${configure_opts} --exec-prefix=${basedir}"
	configure_opts="${configure_opts} --with-local-prefix=${basedir}"
	configure_opts="${configure_opts} --program-prefix=${host_target##*-}-"
	# This setting of --includedir is so that the readline compiles don't
	# get things from the wrong place - we'd prefer not to have to say
	# anything at all and let the qcc/gcc get the system headers on their
	# own, but the only thing we can do is point it at a safe place.
	#configure_opts="${configure_opts} --includedir=."
	configure_opts="${configure_opts} --enable-gdbmi"
#	configure_opts="${configure_opts} --enable-build-warnings=-Wall"
	configure_opts="${configure_opts} --disable-nls"
	configure_opts="${configure_opts} --disable-tui"
	configure_opts="${configure_opts} --disable-sim --without-sim"
        if [ ${GDB_SUFFIX} ]; then
           configure_opts="${configure_opts} --program-suffix=${GDB_SUFFIX}"
        fi
	
	case ${target} in 
	  *-nto-*)
	    CFLAGS="-D__QNXTARGET__ -g -O2"; export CFLAGS
	  ;;
	esac
}

function hook_premake {
	export TERMCAP="-lncurses"
	strip_r_switch
}

function hook_postconfigure {
	if test ${target} = ntomips -a ${SYSNAME} = nto; then
		for i in Makefile sim/Makefile sim/igen/Makefile; do 
			cp $i $i.bak
			sed -e '/^CC_FOR_BUILD =/s/= .*$/= unset QNX_TARGET; \/usr\/bin\/cc/' <$i.bak >$i
			rm $i.bak
		done
	fi
}

function hook_pinfo {
	cd gdb
	gen_pinfo -e -ngdb ${target}-gdb usr/bin USE="%1>%C --help" LICE=GPL DESCRIPTION="GNU Debugger 6.7"
}
