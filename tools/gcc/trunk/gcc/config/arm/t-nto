T_CPPFLAGS=-DTARGET_ALIAS=\"$(target_alias)\"

# Don't run fixproto or fixinc
STMP_FIXPROTO =
STMP_FIXINC =

CRTSTUFF_T_CFLAGS = -fno-omit-frame-pointer -fpic -DCRTSTUFFS_O

LIB1ASMSRC = arm/lib1funcs.asm
LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_nto _bb_init_func \
               _call_via_rX _interwork_call_via_rX _truncdfsf2 _negsf2 \
               _addsubsf3 _muldivsf3 _cmpsf2 _unordsf2 _fixsfsi _fixunssfsi \
               _floatdidf _floatdisf _floatundidf _floatundisf _unorddf2 \
 	       _addsubdf3 _cmpdf2 _negdf2 _fixdfsi _muldivdf3 _fixunsdfsi \
	       _lshrdi3 _ashrdi3 _ashldi3

MULTILIB_OPTIONS = fpic
MULTILIB_DIRNAMES = pic 
MULTILIB_MATCHES = fpic=shared

EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

TARGET_LIBGCC2_CFLAGS = -fno-inline -fexceptions -fomit-frame-pointer -g0

# Assemble startup files.
$(T)crti.o: $(srcdir)/config/arm/crti.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/arm/crti.asm

$(T)crtn.o: $(srcdir)/config/arm/crtn.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/arm/crtn.asm
